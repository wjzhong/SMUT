rexp(N_individual, rate=0.01)
rexp(N_individual, rate=0.0001)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 3)
theta = 1.2
gamma = rnorm(N_SNPs, 0, 3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.00001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
table(survival_outcome[,2])
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 3)
theta = 1.2
gamma = rnorm(N_SNPs, 0, 3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
table(survival_outcome[,2])
N_individual = nrow(Genotype_data)
N_SNPs = ncol(Genotype_data)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 3)
theta = 1.2
gamma = rnorm(N_SNPs, 0, 3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.0000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
table(survival_outcome[,2])
N_individual = nrow(Genotype_data)
N_SNPs = ncol(Genotype_data)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 3)
theta = 1.2
gamma = rnorm(N_SNPs, 0, 3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
table(survival_outcome[,2])
GSMUT(G = Genotype_data, mediator = mediator, outcome = survival_outcome, covariates = X, outcome_type="survival")
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 3)
theta = 2
gamma = rnorm(N_SNPs, 0, 3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 3)
theta = 2
gamma = rnorm(N_SNPs, 0, 3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
table(survival_outcome[,2])
GSMUT(G = Genotype_data, mediator = mediator, outcome = survival_outcome, covariates = X, outcome_type="survival")
N_individual = nrow(Genotype_data)
N_SNPs = ncol(Genotype_data)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 3)
theta = 2
gamma = rnorm(N_SNPs, 0, 3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.1; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
quantile(Tlat)
quantile(eta)
quantile(X %*% iota_Y)
quantile(mediator*theta)
quantile(Genotype_data %*% gamma)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,0.6)
beta = rnorm(N_SNPs, 0, 1)
theta = 2
gamma = rnorm(N_SNPs, 0, 1)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
quantile(eta)
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.1; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,-0.6)
beta = rnorm(N_SNPs, 0, 1)
theta = 2
gamma = rnorm(N_SNPs, 0, 0.5)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
quantile(eta)
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.1; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
lambda=0.01; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,-0.6)
beta = rnorm(N_SNPs, 0, 0.5)
theta = 2
gamma = rnorm(N_SNPs, 0, 0.5)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
quantile(eta)
N_individual = nrow(Genotype_data)
N_SNPs = ncol(Genotype_data)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,-0.6)
beta = rnorm(N_SNPs, 0, 0.5)
theta = 2
gamma = rnorm(N_SNPs, 0, 0.2)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
quantile(eta)
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.000000001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.00001
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.01
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
GSMUT(G = Genotype_data, mediator = mediator, outcome = survival_outcome, covariates = X, outcome_type="survival")
N_individual = nrow(Genotype_data)
N_SNPs = ncol(Genotype_data)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,-0.6)
beta = rnorm(N_SNPs, 0, 0.5)
theta = 1
gamma = rnorm(N_SNPs, 0, 0.2)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
quantile(eta)
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.01
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
GSMUT(G = Genotype_data, mediator = mediator, outcome = survival_outcome, covariates = X, outcome_type="survival")
N_individual = nrow(Genotype_data)
N_SNPs = ncol(Genotype_data)
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,-0.6)
beta = rnorm(N_SNPs, 0, 0.5)
theta = 1
gamma = rnorm(N_SNPs, 0, 0.5)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
quantile(eta)
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.01
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
GSMUT(G = Genotype_data, mediator = mediator, outcome = survival_outcome, covariates = X, outcome_type="survival")
set.seed(1)
# generate two covariates
X1 = rnorm(N_individual, 2, 3)
X2 = sample(c(0,1), N_individual, replace = TRUE)
X = cbind(X1, X2)
# generate coefficients: iota_M, iota_Y, beta, theta and gamma
iota_M = c(0.3,0.5)
iota_Y = c(0.2,-0.6)
beta = rnorm(N_SNPs, 0, 0.5)
theta = 1
gamma = rnorm(N_SNPs, 0, 0.3)
# generate error terms
e1 = rnorm(N_individual, 0, 1)
# generate the mediator
mediator = 1 + X %*% iota_M + Genotype_data %*% beta + e1
# generate the binary outcome
eta = 2 + mediator*theta + X %*% iota_Y + Genotype_data %*% gamma
quantile(eta)
pi = 1/(1+exp( -(eta ) ))
binary_outcome = rbinom(length(pi),size=1,prob=pi)
table(binary_outcome)
# generate the time-to-event outcome based on Weibull baseline hazard
v = runif(N_individual)
lambda=0.01; rho=1; rateC=0.01
Tlat = (- log(v) / (lambda * exp( eta  )))^(1 / rho)
# censoring times
C = rexp(N_individual, rate=rateC)
# follow-up times and event indicators
time = pmin(Tlat, C)
status = as.numeric(Tlat <= C)
survival_outcome = cbind(time,status)
colnames(survival_outcome) = c("time","status")
quantile(survival_outcome[,1])
table(survival_outcome[,2])
GSMUT(G = Genotype_data, mediator = mediator, outcome = survival_outcome, covariates = X, outcome_type="survival")
res_binary=GSMUT(G = Genotype_data, mediator = mediator, outcome = binary_outcome, covariates = X, outcome_type="binary")
res_binary
unlist(res_binary)
print(unlist(res_binary))
“binary”
library(SMUT)
devtools::build()
use_readme_md()
usethis::use_readme_md()
dim(Genotype_data)
head(Genotype_data)
